# OCTANOL TO WATER (ΔG_octanol - ΔG_water) TRANSFER FREE ENERGY PREDICTIONS
#
# This file will be automatically parsed. It must contain the following four elements:
# predictions, name of method, software listing, and method description.
# These elements must be provided in the order shown with their respective headers.
#
# Any line that begins with a # is considered a comment and will be ignored when parsing.
#
#
# PREDICTION SECTION
#
# It is mandatory to submit water to octanol (ΔG_octanol - ΔG_water) transfer free energy (TFE) predictions for all 22 molecules.
# Incomplete submissions will not be accepted.
# The energy units must be in kcal/mol.

# Please report the general molecule `ID tag` in the form of `SMXX` (e.g. SM25, SM26, etc).
# Please indicate the microstate(s) used in the `Molecule ID/IDs considered (no commas)` section (e.g. `SM25_micro000`, SM25_extra001`)
# Please report TFE standard error of the mean (SEM) and TFE model uncertainty.
#
# The data in each prediction line should be structured as follows:
# ID tag, Molecule ID/IDs considered (no commas), TFE, TFE SEM, TFE model uncertainty, (optional) logD, (optional) SEM logD
#
# Your transfer free energy prediction for the neutral form does NOT have to be `SMXX_micro000` (which is the challenge provided neutral microstate).
# If you use a microstate other than the challenge provided microstate, please fill out the `Molecule ID/IDs considered (no commas)` section using a molecule ID in the form of `SMXX_extra001` (number can vary) and please list the molecule ID and it's SMILES string in your methods description in the `METHOD DESCRIPTION SECTION`.
#
# You may optionally provide predicted logD values; these will be used as a consistency check on our estimated logD values if you submit both logP and pKa values.
#
# Only one entry in the second column (`Molecule ID/IDs considered (no commas)`) is required, but you should list all IDs considered/input to your calculations. See challenge instructions.
#
# If you have evaluated additional microstates then the molecule ID used in the `Molecule ID/IDs considered (no commas)` section needs to be in the format: `SMXX_extra001` (number can vary).
# If multiple microstates are used, please report the order of population in the aqueous phase in descending order.
# Please list microstate populations, SMILES strings and the molecule IDs in the `METHOD DESCRIPTION SECTION` section further below.
#
# The list of predictions must begin with the 'Predictions:' keyword as illustrated here.
Predictions:
SM25,SM25_micro000,-3.04,0.0,0.19
SM26,SM26_micro000,-1.31,0.0,0.15
SM27,SM27_micro000,-1.82,0.0,0.46
SM28,SM28_micro000,-1.93,0.0,0.33
SM29,SM29_micro000,-1.91,0.0,0.43
SM30,SM30_micro000,-3.18,0.0,0.65
SM31,SM31_micro000,-2.00,0.0,0.45
SM32,SM32_micro000,-3.01,0.0,0.73
SM33,SM33_micro000,-4.51,0.0,0.56
SM34,SM34_micro000,-2.95,0.0,0.81
SM35,SM35_micro000,-0.61,0.0,0.37
SM36,SM36_micro000,-2.30,0.0,0.62
SM37,SM37_micro000,-0.41,0.0,0.55
SM38,SM38_micro000,-1.94,0.0,0.33
SM39,SM39_micro000,-2.60,0.0,0.19
SM40,SM40_micro000,-1.82,0.0,0.17
SM41,SM41_micro000,-2.19,0.0,0.38
SM42,SM42_micro000,-4.81,0.0,0.67
SM43,SM43_micro000,-2.52,0.0,0.38
SM44,SM44_micro000,-0.51,0.0,0.27
SM45,SM45_micro000,-2.09,0.0,0.27
SM46,SM46_micro000,-0.54,0.0,0.30


#
#
# Please list your name, using only UTF-8 characters as described above. The "Participant name:" entry is required.
Participant name:
Alex Dickson

#
#
# Please list your organization/affiliation, using only UTF-8 characters as described above.
Participant organization:
Michigan State University

#
#
# NAME SECTION
#
# Please provide an informal but informative name of the method used.
# The name must not exceed 40 characters.
# The 'Name:' keyword is required as shown here.
Name:
# ClassicalGSG
ClassicalGSG DB1

#
#
# COMPUTE TIME SECTION
#
# Please provide the average compute time across all of the molecules.
# For physical methods, report the GPU and/or CPU compute time in hours.
# For empirical methods, report the query time in hours.
# Create a new line for each processor type.
# The 'Compute time:' keyword is required as shown here.
Compute time:
52 hours, CPU

#
# COMPUTING AND HARDWARE SECTION
#
# Please provide details of the computing resources that were used to train models and make predictions.
# Please specify compute time for training models and querying separately for empirical prediction methods.
# Provide a detailed description of the hardware used to run the simulations.
# The 'Computing and hardware:' keyword is required as shown here.
Computing and hardware:

We used the Michigan State University's High Performance Computing
Center (HPCC) resources for all computations.  To generate molecular
features and train the models, we performed parallel tasks on a single
node, where 12 CPUs and 20 CPUs of model Intel(R) Xeon(R) CPU
E5-2680 v4 @ 2.40GHz CPUs were employed, respectively.

# SOFTWARE SECTION
#
# List all major software packages used and their versions.
# Create a new line for each software.
# The 'Software:' keyword is required.
Software:
CGenFF 2.3.0
Openbabel 2.4.1
RDKit 2019.09.1.0
PyTorch 1.3.0
Skorch 0.7.0
Sklearn 0.21.3


# METHOD CATEGORY SECTION
#
# State which method category your prediction method is better described as:
# `Physical (MM)`, `Physical (QM)`, `Empirical`, or `Mixed`.
# Pick only one category label.
# The `Category:` keyword is required.
Category:
Empirical

# METHOD DESCRIPTION SECTION
#
# Methodology and computational details.
# Level of details should be roughly equivalent to that used in a publication.
# Please include the values of key parameters with units.
# Please explain how statistical uncertainties were estimated.
#
# If you have evaluated additional microstates, please report their SMILES strings and populations of all the microstates in this section.
# If you used a microstate other than the challenge provided microstate (`SMXX_micro000`), please list your chosen `Molecule ID` (in the form of `SMXX_extra001`) along with the SMILES string in your methods description.
#
# Use as many lines of text as you need.
# All text following the 'Method:' keyword will be regarded as part of your free text methods description.
Method:

The logP values here were predicted using an empirical method we refer
to as “ClassicalGSG”. It employs neural networks (NNs) where the
inputs are molecular features generated using a recently developed
method called Geometric Scattering for Graphs (GSG). In GSG, atomic
features are transformed into molecular features using the graph
molecular structure. For atomic features, all of our predictions use
four physical quantities from classical molecular dynamics
forcefields: partial charge, Lennard-Jones well depth, Lennard-Jones
radius and atomic type.  The first three parameters are calculated
using the CGenFF package.  The atomic type is the one-hot encoding of
an integer from 0 to 35 determined by a manual grouping of CGenFF atom
types. This implementation of the GSG method uses a concatenation of
the zeroth, first and second order features, calculated using a
wavelet number (J) of 4.  In the neural networks, we performed a grid
search and five-fold cross validation to tune the following
hyperparameters: the number of hidden layers is tested for [2,3,4,5],
the size of hidden layer for [100, 200, 300, 400], and droput for
[0.0., 0.2, 0.4]. The loss function of the NNs is MSELOSS and the Adam
optimizer is used for optimizing the parameters.

The full training set was built using the following datasets:
ALOGPS_3_01, Huuskonen, logpt_all_data_training,
Logpt_challenge_training, PhysProp, Guowei, Chembl21. The RDKit
package is employed to create canonical SMILES for each
molecule. After removing duplicate molecules, 44,595 molecules
remained in the dataset. We used Openbabel to convert SMILES to mol2
files. These mol2 files are fed to CGenFF to determine partial charges
and Lennard-Jones parameters for all atoms in each molecule. As the
generation of CGenFF atomic attributes failed for some molecules, we
ended up with 41,409 molecules in our dataset, which we refer to below
as the “full dataset”.


DB1: The full training set was used for these predictions.

DB2: In this prediction we use a training set of 3,482 molecules,
obtained by filtering the full training set and keeping only those
that had the following elements (C, N, O, S and H).  Molecules that
either had another element, not listed above, or did not have the full
set of elements, were not selected.

DB3: In this prediction we use a training set of 2,379 molecules,
obtained by filtering the full training set and keeping only those
with sulfonyl functional groups.  This was done using the
HasSubstructMatch function of RDKit tool.

DB4: In this prediction we use a training set of 1, 482 molecules,
obtained by filtering the full training set and keeping only those
with sulfonyl functional groups.  Additionally, these were further
filtered to select only compounds with the following elements (C, N,
O, S, and H).  Molecules that either had another element, not listed
above, or did not have the full set of elements, were not selected.

Here the logP values are predicted by the model trained on DB1. The
model uncertainties are the standard deviation of the logP values are
predicted by the four different models trained on DB1, DB2, DB3, and
DB4.



#
#
# All submissions must either be ranked or non-ranked.
# Only one ranked submission per participant is allowed.
# Multiple ranked submissions from the same participant will not be judged.
# Non-ranked submissions are accepted so we can verify that they were made before the deadline.
# The "Ranked:" keyword is required, and expects a Boolean value (True/False)
Ranked:
False
